version: "3.9"

services:
  admin:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
    env_file:
      - .env
    restart: always
    container_name: admin
    volumes:
      - ./apps/admin/src:/usr/src/app/apps/admin/src:ro
    networks:
      - mynetwork

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    env_file:
      - .env
    restart: always
    container_name: frontend
    volumes:
      - ./apps/frontend/src:/usr/src/app/apps/frontend/src:ro
    networks:
      - mynetwork

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile.dev
    env_file:
      - .env
    depends_on:
      - db
    restart: always
    container_name: backend
    volumes:
      - ./apps/backend/src:/usr/src/app/apps/backend/src:ro
    networks:
      - mynetwork

  db:
    image: postgres
    env_file:
      - .env
    container_name: db
    restart: always
    networks:
      - mynetwork

  nginx:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.dev
    restart: always
    depends_on:
      - admin
      - frontend
      - backend
    ports:
      - 3000:80
    container_name: nginx
    networks:
      - mynetwork

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    links:
      - db:db
    networks:
      - mynetwork

networks:
  mynetwork:
